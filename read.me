This is to solve the zebra and (eventually) the einstein logic
puzzles.  In R, type

source("zebra.R")

and this will create file "zebra.cnf" which is in conjugate normal
form (CNF).  File zebra.R (and setup.R) contain extensive inline
documentation.

File zebra.cnf is the logical puzzle expressed in conjugate normal
form: the numbers correspond to the various logical statements.  To
solve the puzzle, use any cnf solver.  I have been working with
"glucose"; you can download it from

https://www.labri.fr/perso/lsimon/glucose/

I have been using the code in the simp/ directory, version 4.1.  You
will need to compile it (just type 'make') and then move the
executable, glucose, to the repo's home directory.

Then './glucose zebra.cnf' solves the puzzle in the sense of
establishing whether the constraints are consistent or not,
and './glucose -model zebra.cnf' provides an instantiation.

./glucose -model zebra.cnf | tail -1 > zebra_solution.txt

creates text file zebra_solution.txt which specifies the solution.
Then, in R, function show() interprets zebra_solution.txt.

> show()
      [,1]        [,2]          
 [1,] "blue"      "one"         
 [2,] "yellow"    "two"         
 [3,] "red"       "three"       

[snip]

[73,] "water"     "kools"       
[74,] "orange"    "luckystrike" 
[75,] "tea"       "chesterfield"

Thus (from the first line) the blue house is number one, the yellow
house is number two, and so on, down to the last line that shows that
tea is drunk in the same house that chesterfield is smoked.

Function show() takes a "select" argument that allows one to drill
down to just the lines of interest.  Thus:


> show("zebra")
[1] green       five        japanese    coffee      parliaments


and we see that the zebra lives in the green house, which is number
five, owned by the japanes man who drinks coffee and smokes
parliaments.
